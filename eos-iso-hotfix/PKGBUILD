#!/bin/bash

# Maintainer: manuel (see forum.endeavouros.com)

pkgname=eos-iso-hotfix
pkgdesc="EndeavourOS ISO hotfixes"

url="https://github.com/endeavouros-team/ISO-hotfixes/"

pkgver=25.6.2
pkgrel=1

arch=('any')
license=('GPL')
depends=(git)

# URLs to hotfix files and files managed by hotfixes.
_url_hotfix="https://raw.githubusercontent.com/endeavouros-team/ISO-hotfixes/refs/heads/main"
_url_script="https://raw.githubusercontent.com/endeavouros-team/calamares/refs/heads/calamares/data/eos/scripts"
_url_module="https://raw.githubusercontent.com/endeavouros-team/calamares/refs/heads/calamares/data/eos/modules"

_prepare_eos_iso_hotfix() {
    # This function fetches the latest hotfix files and some related calamares files.
    # Fetch hotfix files from github using 'git clone'.
    # The files that hotfixes will use should also be listed below.
    #
    # If hotfixes change (e.g. need new files), this function may fail.
    # Then modify the lists of files according to changes required by the hotfixes.

    local script_files=(                          # hotfixes may use/modify these files
        $_url_script/cleaner_script.sh
        $_url_script/chrooted_cleaner_script.sh
    )
    local module_files=(                          # hotfixes may use/modify these files
        $_url_module/packagechooser.conf
        $_url_module/pacstrap.conf
    )
    local hotfix_files=(                          # this will contain the hotfix files, see below
        # $_url_hotfix/hotfix-end.bash
        # $_url_hotfix/hotfix-start.bash
        # $_url_hotfix/netinstall.yaml-cassini-R3.patch
        # $_url_hotfix/packagechooser.conf_mercury_neo.patch
        # $_url_hotfix/packagechooser.conf_endeavour_neo_1.patch
        # $_url_hotfix/packagechooser.conf_gemini_1.patch
        # $_url_hotfix/packagechooser.conf.patch
        # $_url_hotfix/pacstrap.conf_endeavour_neo.patch
        # $_url_hotfix/README.md
        # $_url_hotfix/settings_offline.conf.patch
        # $_url_hotfix/settings_online.conf.patch
    )

    # Download hotfix files since these might change often.
    local dir=$(mktemp -d)
    chmod go-rwx $dir
    hotfix_files=()

    # Find the names of all the latest hotfix files.
    git clone https://github.com/endeavouros-team/ISO-hotfixes.git "$dir" &>/dev/null || {
        rm -rf $dir
        exit 1
    }
    local file
    for file in $(/bin/ls -1 "$dir") ; do
        case "$file" in
            *.bash | *.patch | *.md)
                hotfix_files+=("$_url_hotfix/${file##*/}") ;;
        esac
    done
    rm -rf "$dir"

    source=(
        $( printf "%s\n" "${hotfix_files[@]}" "${script_files[@]}" "${module_files[@]}" | sort -V)
    )
    # Now 'source' should contain all the latest files (URLs) needed to support the hotfix feature in the EndeavourOS installer.
}
_prepare_eos_iso_hotfix

sha512sums=('52aecf3e836f1720855e248df17b95e39cbc8fe8bb3b9e005ada8cacfd6bd630af4d5ad388ea621b7687f05414208d09307b3d67fdcbd45b33460391dbc018f7'
            '0efec1ab124a22bc95c822852ecc0ba6d6a7231fb0958da92f6dbdb19d036611634d16aba0615f8fe0e0ba634d47bc8c79bb3bc9786c36ef7534f2e1bc04ade1'
            '292e1d4c42d00dc52c4e8a330a0fdc6f6d01bd6d027754a456c0cbc62dbf9ccbe6390b46d16aee96484eeb31546fdd9e81a82256158320a95d27029b489fa039'
            '5dab144e787cc9649cd57addbbc542ece54ada5085dda42c9baf10201fcb406c74056969f93622d3a0d6be5ba70d053a16e299e699b21d0f64402eabf93abd6e'
            'e5d8bbe5d22e3535ce2c67c42c92328dd25f2a64559b5d6e6acc05917bf8a076a49a8781f94b53e9d1a27a410a36ff2c86efbfbbbdbd345b1d5b7fb5e0087319'
            '8e4c446dab9b31c2deeb44218629d7c82354b5433925768cb2b4c2c6279bd36f80ddcd4063d9ed5da0d55105b061e1b7a1a51da3fc9fe9433e2e387243f7739d'
            '3aa95fce738c40e4b239c35339195165261717938f0f3e2653c01610cf6da6bfa2548287d821a8bee0906e0a3a623129e1f1304c34946602de9fe46ad3e304c6'
            'db8c8d58bae77b8b752bd77c3fa59567fd895717f45d14453caa2eab5569b4162de0b49c77571297e5928f146e19f47b125416bd60a12c8be9baa04131f7adbd'
            'eddfe733abd98f53e7481d147e78dec4bea5b7438ceeb967460fae63ae9390f6173d55a26fca715d0e99c15b2ddf595b780cc81ca63d2b0b1b9ec531d7b94a92'
            '8d0176fec8dff63dd57a282bc69385d0db93d2b2656c52f95483040f1d7d071b6f7d4032273480d3729a55cf3f1db5bd45e4e616891dc2d0b150a214ecfb9890'
            '9c48e4b7d752ace0ff6c806b649b9a30cd2a89ca7d5ddad54065fa140dc8069a126bc7997b8ca40bb09645454108687ec0595a048e77a80903b97f770cebab22'
            '8171f20f23cd4c7f1fc6e209b8719cc0820a9057af5d4e2d12dd1610a7bb32cad01b974ee267f2a71269fa19f5008355f12acc3fc68fcb55aa0b27ff3feb769e'
            '0ee3ea3d2e59ca0047365eb7ea75906f2fd4ac194f553e180cd605965c0962b673a5ae3ae8c80d9af9c6e6a2278863f4e9afd0417a11da2d8fac8032aeedc4ba'
            '13596efc2631715a69d9ce529f94da4c2af395a91cd067e80e39ef07b650b17a582b15a8658d3b87fd8f45cabd1afd538c0dd83e770ac27c195c70a2a528dfbb'
            '8cf446d9b1d284fd116d9eb837769e63ff275235e467b467e67d7d9768fd355df60a9b054da2243f02bbedcda7f0cb9896c5f863e088b43ec1969198fa5b2ae9')

package() {
    local item src
    local cleanups=()

    for src in "${source[@]}" ; do
        item="${src##*/}"
        case "$src" in
            ${_url_script}/*)   install -Dm755 "$item" "$pkgdir/usr/share/endeavouros/hotfix/scripts/$item" ;;
            ${_url_module}/*)   install -Dm644 "$item" "$pkgdir/usr/share/endeavouros/hotfix/modules/$item" ;;
            ${_url_hotfix}/*)   install -Dm644 "$item" "$pkgdir/usr/share/endeavouros/hotfix/hotfixes/$item" ;;
        esac
        cleanups+=("../$item")
    done
    rm -f "${cleanups[@]}"
}
